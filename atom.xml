<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>d1lute的blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-17T12:35:38.352Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>d1lute</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>makerctfWP</title>
    <link href="http://yoursite.com/2019/04/15/wp-for-makerctf/"/>
    <id>http://yoursite.com/2019/04/15/wp-for-makerctf/</id>
    <published>2019-04-15T15:09:28.000Z</published>
    <updated>2019-04-17T12:35:38.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="1、easy-rsa"><a href="#1、easy-rsa" class="headerlink" title="1、easy_rsa"></a>1、easy_rsa</h2><h3 id="1-1、先读一下n"><a href="#1-1、先读一下n" class="headerlink" title="1.1、先读一下n"></a>1.1、先读一下n</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/1.png" alt="微信图片_20181012144505"></p><p>n=198EAD134975487966583BF363D7D36FFE4241DFBF0EAB37511DEDE00F279FE2F</p><h3 id="1-2、写个脚本转成十进制"><a href="#1-2、写个脚本转成十进制" class="headerlink" title="1.2、写个脚本转成十进制"></a>1.2、写个脚本转成十进制</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/2.png" alt="微信图片_20181012144505"></p><p>n=184958528317971463827449839591526689799653355547671707738065461546785649065519</p><h3 id="1-3、用yafu分解一下"><a href="#1-3、用yafu分解一下" class="headerlink" title="1.3、用yafu分解一下"></a>1.3、用yafu分解一下</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/3.png" alt="微信图片_20181012144505"></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/4.png" alt="微信图片_20181012144505"></p><p>不妨使得</p><p>p=420226057252427765877741059207519510621</p><p>q=440140550843727826962832356360132665339</p><h3 id="1-4、写一个脚本解出私钥然后存成pem文件"><a href="#1-4、写一个脚本解出私钥然后存成pem文件" class="headerlink" title="1.4、写一个脚本解出私钥然后存成pem文件"></a>1.4、写一个脚本解出私钥然后存成pem文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">keypair = RSA.generate(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">keypair.p =<span class="number">440140550843727826962832356360132665339</span></span><br><span class="line"></span><br><span class="line">keypair.q =<span class="number">420226057252427765877741059207519510621</span></span><br><span class="line"></span><br><span class="line">keypair.e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">keypair.n = keypair.p * keypair.q</span><br><span class="line"></span><br><span class="line">Qn = long((keypair.p<span class="number">-1</span>) * (keypair.q<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="keyword">True</span>):</span><br><span class="line">x = (Qn * i ) + <span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> (x % keypair.e == <span class="number">0</span>):</span><br><span class="line">keypair.d = x / keypair.e</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">private = open(<span class="string">'private.pem'</span>,<span class="string">'w'</span>)</span><br><span class="line"></span><br><span class="line">private.write(keypair.exportKey())</span><br><span class="line"></span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure><h3 id="1-5、将得到的私钥和flag以及公钥放在一起，用openssl解密"><a href="#1-5、将得到的私钥和flag以及公钥放在一起，用openssl解密" class="headerlink" title="1.5、将得到的私钥和flag以及公钥放在一起，用openssl解密"></a>1.5、将得到的私钥和flag以及公钥放在一起，用openssl解密</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/5.png" alt="微信图片_20181012144505"></p><h2 id="2、B-amp-C"><a href="#2、B-amp-C" class="headerlink" title="2、B&amp;C"></a>2、B&amp;C</h2><h3 id="2-1、看到密码，由题目想到base家族以及变异凯撒"><a href="#2-1、看到密码，由题目想到base家族以及变异凯撒" class="headerlink" title="2.1、看到密码，由题目想到base家族以及变异凯撒"></a>2.1、看到密码，由题目想到base家族以及变异凯撒</h3><p>LJDU433EGJNDIWTKNQ4GCWCCORIW2YZ5</p><h3 id="2-2、一开始只有大写字母以及数字，推测是base32加密，用脚本解密后得到"><a href="#2-2、一开始只有大写字母以及数字，推测是base32加密，用脚本解密后得到" class="headerlink" title="2.2、一开始只有大写字母以及数字，推测是base32加密，用脚本解密后得到"></a>2.2、一开始只有大写字母以及数字，推测是base32加密，用脚本解密后得到</h3><p>ZGNod2Z4Zjl8aXBtQmc=</p><h3 id="2-3、看到同时有大小写字母和数字以及等号，推测还有base64加密，用脚本解密后得到"><a href="#2-3、看到同时有大小写字母和数字以及等号，推测还有base64加密，用脚本解密后得到" class="headerlink" title="2.3、看到同时有大小写字母和数字以及等号，推测还有base64加密，用脚本解密后得到"></a>2.3、看到同时有大小写字母和数字以及等号，推测还有base64加密，用脚本解密后得到</h3><p>dchwfxf9|ipmBg</p><h3 id="2-4、由于题目中提示有变异凯撒和base，推测与ascii码的位移有关"><a href="#2-4、由于题目中提示有变异凯撒和base，推测与ascii码的位移有关" class="headerlink" title="2.4、由于题目中提示有变异凯撒和base，推测与ascii码的位移有关"></a>2.4、由于题目中提示有变异凯撒和base，推测与ascii码的位移有关</h3><p>猜测是base开头的flag</p><p>d-b=2</p><p>c-a=-2</p><p>h-s=-10</p><p>w-e=14</p><p>并没有找到规律,</p><p>猜测是Caesar开头</p><p>d-c=1</p><p>c-a=2</p><p>h-e=3</p><p>w-s=4</p><h3 id="2-5、由此推测出变异凯撒原理是在ascii码上进行的吗每位位移数加一的加密，写一个脚本解密"><a href="#2-5、由此推测出变异凯撒原理是在ascii码上进行的吗每位位移数加一的加密，写一个脚本解密" class="headerlink" title="2.5、由此推测出变异凯撒原理是在ascii码上进行的吗每位位移数加一的加密，写一个脚本解密"></a>2.5、由此推测出变异凯撒原理是在ascii码上进行的吗每位位移数加一的加密，写一个脚本解密</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, a);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; a[i] != <span class="number">0</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>, a[i] - i - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6、运行脚本-得到flag。"><a href="#2-6、运行脚本-得到flag。" class="headerlink" title="2.6、运行脚本,得到flag。"></a>2.6、运行脚本,得到flag。</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/6.png" alt="微信图片_20181012144505"></p><h2 id="3、base-amp-fez"><a href="#3、base-amp-fez" class="headerlink" title="3、base&amp;fez"></a>3、base&amp;fez</h2><h3 id="3-1打开题目看到源码"><a href="#3-1打开题目看到源码" class="headerlink" title="3.1打开题目看到源码"></a>3.1打开题目看到源码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> len(a)==len(b)</span><br><span class="line">    c=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        c+=chr(ord(a[i])^ord(b[i]))</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x,k)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> xor(xor(x,k),<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">round</span><span class="params">(M,K)</span>:</span></span><br><span class="line">    L=M[<span class="number">0</span>:<span class="number">27</span>]</span><br><span class="line">    R=M[<span class="number">27</span>:<span class="number">54</span>]</span><br><span class="line">    new_l=R</span><br><span class="line">    new_r=xor(xor(R,L),K)</span><br><span class="line">    <span class="keyword">return</span> new_l+new_r</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">festal</span><span class="params">(m,K)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> K:</span><br><span class="line">        m=round(m,i) </span><br><span class="line">    <span class="keyword">return</span> m</span><br><span class="line"></span><br><span class="line">K=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">7</span>):</span><br><span class="line">    K.append(os.urandom(<span class="number">27</span>))</span><br><span class="line">m=open(<span class="string">"base_and_fez"</span>,<span class="string">"rb"</span>).read()</span><br><span class="line"><span class="keyword">print</span> (len(m))</span><br><span class="line"><span class="keyword">assert</span> len(m)&lt;=<span class="number">54</span></span><br><span class="line">m+=os.urandom(<span class="number">54</span>-len(m)) </span><br><span class="line"></span><br><span class="line">test=os.urandom(<span class="number">54</span>)</span><br><span class="line"><span class="keyword">print</span> (test.encode(<span class="string">"hex"</span>))</span><br><span class="line"><span class="keyword">print</span> (festal(test,K).encode(<span class="string">"hex"</span>))</span><br><span class="line"><span class="keyword">print</span> (festal(m,K).encode(<span class="string">"hex"</span>))</span><br></pre></td></tr></table></figure><h3 id="3-2可以看到题目本身是以异或为核心的加密方法，也就是说这种加密方式可以通过异或同一个k两次还原来进行解题"><a href="#3-2可以看到题目本身是以异或为核心的加密方法，也就是说这种加密方式可以通过异或同一个k两次还原来进行解题" class="headerlink" title="3.2可以看到题目本身是以异或为核心的加密方法，也就是说这种加密方式可以通过异或同一个k两次还原来进行解题"></a>3.2可以看到题目本身是以异或为核心的加密方法，也就是说这种加密方式可以通过异或同一个k两次还原来进行解题</h3><p>  观察函数，首先进行了七次round，不妨设被加密明文前半部分为m1，后半部分为m2</p><p>单看m1和m2的变换，有如下结果(将m1xorm2表示为m1m2,且将x xor x直接消去)</p><p>m1         m2</p><p>m2         m1m2</p><p>m1m2   m1</p><p>m1         m2</p><p>m2         m1m2</p><p>m1m2   m1</p><p>m1         m2</p><p>m2         m1m2</p><p>因此经过加密后，原文为m1+m2的明文，被加密为了m2Kj+m1m2Ki（其中Kj和Ki为K的七个部分进行的某种乘积组合，由于可以消掉，所以不去推导）</p><p>因此将TEXT看作m1+m2</p><p>将明文看作M1+M2</p><p>resault中的三个字符串分别为</p><p>m1+m2</p><p>m2Kj+m1m2Ki</p><p>M2Kj+M1M2Ki</p><p>解密思路为</p><p>M2=M2Kj  xor   m2Kj   xor   m2</p><p>M1=(M1M2Ki xor M2Kj) xor(m1m2Ki xor m2Kj) xor m1</p><h3 id="3-3分析完思路，通过脚本进行解密"><a href="#3-3分析完思路，通过脚本进行解密" class="headerlink" title="3.3分析完思路，通过脚本进行解密"></a>3.3分析完思路，通过脚本进行解密</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xor</span><span class="params">(a,b)</span>:</span></span><br><span class="line">    <span class="keyword">assert</span> len(a)==len(b)</span><br><span class="line">    c=<span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(a)):</span><br><span class="line">        c+=chr(ord(a[i])^ord(b[i]))</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line">b=<span class="string">"deec78f07a169673679822c2b06c3b96f9fb225dc5404b532dd8b04a992774e8ec76ac7f6322f3492534033dd5953f06d601c14d3ad3"</span></span><br><span class="line">c=<span class="string">"aa5467efd0b871e3e5fc89f146f766b82b5145c005a4872fd1ef11bf0505027fc7f0eb0db49501832831c7b204492dcdf4a6f0e6d110"</span></span><br><span class="line">m=<span class="string">"c50a135a56c000a4c394549407bb2cab1349ebdc4ee31e0601e33b47d3752381fc82b3bd37fa65d9a9740890fe25f6e8ba9135d3499f"</span></span><br><span class="line">c=c.decode(<span class="string">"hex"</span>)</span><br><span class="line">b=b.decode(<span class="string">"hex"</span>)</span><br><span class="line">m=m.decode(<span class="string">"hex"</span>)</span><br><span class="line"></span><br><span class="line">c1=c[<span class="number">0</span>:<span class="number">27</span>]</span><br><span class="line">c2=c[<span class="number">27</span>:<span class="number">54</span>]</span><br><span class="line">b1=b[<span class="number">0</span>:<span class="number">27</span>]</span><br><span class="line">b2=b[<span class="number">27</span>:<span class="number">54</span>]</span><br><span class="line">m1=m[<span class="number">0</span>:<span class="number">27</span>]</span><br><span class="line">m2=m[<span class="number">27</span>:<span class="number">54</span>]</span><br><span class="line">x=xor(xor(xor(b1,b2),xor(c1,c2)),m1)+xor(xor(b1,c1),m2)</span><br><span class="line"><span class="keyword">print</span> (x)</span><br><span class="line"></span><br><span class="line">o=open(<span class="string">"base_and_fez"</span>,<span class="string">"wb"</span>)</span><br><span class="line">o.write(x)</span><br></pre></td></tr></table></figure><h3 id="3-4解码后得到"><a href="#3-4解码后得到" class="headerlink" title="3.4解码后得到"></a>3.4解码后得到</h3><p>D..3kEas3’HU;-tAN2PSE%uKV?Y3kj&lt;+Re#?SQV/2)&amp;BTBk(^]I/~&gt;</p><h3 id="3-5不断尝试各种base解密，以及经历了大量自我怀疑后，用base85解密得到flag"><a href="#3-5不断尝试各种base解密，以及经历了大量自我怀疑后，用base85解密得到flag" class="headerlink" title="3.5不断尝试各种base解密，以及经历了大量自我怀疑后，用base85解密得到flag"></a>3.5不断尝试各种base解密，以及经历了大量自我怀疑后，用base85解密得到flag</h3><p>makerctf{Ba4e85_p1us_fesTe1l_1s_50_nice_}</p><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="1、究极脑洞题"><a href="#1、究极脑洞题" class="headerlink" title="1、究极脑洞题"></a>1、究极脑洞题</h2><h3 id="1-1、看完题目，由脑洞题，脑洞猜测hint指向qq号"><a href="#1-1、看完题目，由脑洞题，脑洞猜测hint指向qq号" class="headerlink" title="1.1、看完题目，由脑洞题，脑洞猜测hint指向qq号"></a>1.1、看完题目，由脑洞题，脑洞猜测hint指向qq号</h3><p>316f526f614766766855384d4b73396a3865316f716d41<br>hint：2698852664</p><h3 id="1-2、在qq中搜qq号，看到"><a href="#1-2、在qq中搜qq号，看到" class="headerlink" title="1.2、在qq中搜qq号，看到"></a>1.2、在qq中搜qq号，看到</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/7.png" alt="微信图片_20181012144505"></p><h3 id="1-3、看到a7gh脑洞猜测是百度云密码，因此字符串可能指向百度云后缀，由于该字符串看起来很像十六进制码，因此base16解密一下得到"><a href="#1-3、看到a7gh脑洞猜测是百度云密码，因此字符串可能指向百度云后缀，由于该字符串看起来很像十六进制码，因此base16解密一下得到" class="headerlink" title="1.3、看到a7gh脑洞猜测是百度云密码，因此字符串可能指向百度云后缀，由于该字符串看起来很像十六进制码，因此base16解密一下得到"></a>1.3、看到a7gh脑洞猜测是百度云密码，因此字符串可能指向百度云后缀，由于该字符串看起来很像十六进制码，因此base16解密一下得到</h3><p>1oRoaGfvhU8MKs9j8e1oqmA</p><h3 id="1-4将其加上百度网盘后缀，得到一个百度云链接"><a href="#1-4将其加上百度网盘后缀，得到一个百度云链接" class="headerlink" title="1.4将其加上百度网盘后缀，得到一个百度云链接"></a>1.4将其加上百度网盘后缀，得到一个百度云链接</h3><p><a href="https://pan.baidu.com/share/init?surl=oRoaGfvhU8MKs9j8e1oqmA" target="_blank" rel="noopener">https://pan.baidu.com/share/init?surl=oRoaGfvhU8MKs9j8e1oqmA</a></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/8.png" alt="微信图片_20181012144505"></p><h3 id="1-5输入a7gh得到宝藏w1nd的私房照，hex打开，得到新的hint"><a href="#1-5输入a7gh得到宝藏w1nd的私房照，hex打开，得到新的hint" class="headerlink" title="1.5输入a7gh得到宝藏w1nd的私房照，hex打开，得到新的hint"></a>1.5输入a7gh得到宝藏w1nd的私房照，hex打开，得到新的hint</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/9.png" alt="微信图片_20181012144505"></p><h3 id="1-6看到-猜测base64，解密后得到"><a href="#1-6看到-猜测base64，解密后得到" class="headerlink" title="1.6看到=猜测base64，解密后得到"></a>1.6看到=猜测base64，解密后得到</h3><p>hint:password is from the group leader</p><h3 id="1-7去找群主"><a href="#1-7去找群主" class="headerlink" title="1.7去找群主"></a>1.7去找群主</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/10.png" alt="微信图片_20181012144505"></p><h3 id="1-8尝试用qq号解密，成功得到"><a href="#1-8尝试用qq号解密，成功得到" class="headerlink" title="1.8尝试用qq号解密，成功得到"></a>1.8尝试用qq号解密，成功得到</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/11.png" alt="微信图片_20181012144505"></p><p>用hex打开后得到flag</p><h2 id="2、backward"><a href="#2、backward" class="headerlink" title="2、backward"></a>2、backward</h2><h3 id="2-1由hint猜测图片中隐藏着倒着写的文件，并由文件末尾的GNP确认这一猜想"><a href="#2-1由hint猜测图片中隐藏着倒着写的文件，并由文件末尾的GNP确认这一猜想" class="headerlink" title="2.1由hint猜测图片中隐藏着倒着写的文件，并由文件末尾的GNP确认这一猜想"></a>2.1由hint猜测图片中隐藏着倒着写的文件，并由文件末尾的GNP确认这一猜想</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/12.png" alt="微信图片_20181012144505"></p><h3 id="2-2写脚本"><a href="#2-2写脚本" class="headerlink" title="2.2写脚本"></a>2.2写脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=open(<span class="string">'backward.png'</span>,<span class="string">'rb'</span>).read()</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'rst.txt'</span>, <span class="string">'w+'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">-2</span>,<span class="number">-89404</span>,<span class="number">-2</span>):</span><br><span class="line">        f.write(a[i<span class="number">-2</span>:i:<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>得到新的文件</p><h3 id="2-3将解出的结果利用hex形成新的png文件"><a href="#2-3将解出的结果利用hex形成新的png文件" class="headerlink" title="2.3将解出的结果利用hex形成新的png文件"></a>2.3将解出的结果利用hex形成新的png文件</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/13.png" alt="微信图片_20181012144505"></p><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="1、签到题"><a href="#1、签到题" class="headerlink" title="1、签到题"></a>1、签到题</h2><h3 id="1-1打开链接，看到源码"><a href="#1-1打开链接，看到源码" class="headerlink" title="1.1打开链接，看到源码"></a>1.1打开链接，看到源码</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/14.png" alt="微信图片_20181012144505"></p><h3 id="1-2查看源码无果后尝试抓包"><a href="#1-2查看源码无果后尝试抓包" class="headerlink" title="1.2查看源码无果后尝试抓包"></a>1.2查看源码无果后尝试抓包</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/15.png" alt="微信图片_20181012144505"></p><h3 id="1-3前往提示所在的链接"><a href="#1-3前往提示所在的链接" class="headerlink" title="1.3前往提示所在的链接"></a>1.3前往提示所在的链接</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/16.png" alt="微信图片_20181012144505"></p><h3 id="1-4看到源码后了解到有两个waf需要绕过1：-2：strcmp，第一个可以通过php弱类型绕过，第二个可以通过strcmp对于数组和字符串比较的漏洞绕过，同时源码中有json解码的函数，因此用json的格式构造payload"><a href="#1-4看到源码后了解到有两个waf需要绕过1：-2：strcmp，第一个可以通过php弱类型绕过，第二个可以通过strcmp对于数组和字符串比较的漏洞绕过，同时源码中有json解码的函数，因此用json的格式构造payload" class="headerlink" title="1.4看到源码后了解到有两个waf需要绕过1：== 2：strcmp，第一个可以通过php弱类型绕过，第二个可以通过strcmp对于数组和字符串比较的漏洞绕过，同时源码中有json解码的函数，因此用json的格式构造payload"></a>1.4看到源码后了解到有两个waf需要绕过1：== 2：strcmp，第一个可以通过php弱类型绕过，第二个可以通过strcmp对于数组和字符串比较的漏洞绕过，同时源码中有json解码的函数，因此用json的格式构造payload</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/17.png" alt="微信图片_20181012144505"></p><h3 id="1-5成功得到flag"><a href="#1-5成功得到flag" class="headerlink" title="1.5成功得到flag"></a>1.5成功得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/18.png" alt="微信图片_20181012144505"></p><h2 id="2、easy-eval"><a href="#2、easy-eval" class="headerlink" title="2、easy_eval"></a>2、easy_eval</h2><h3 id="2-1打开链接，看到源码"><a href="#2-1打开链接，看到源码" class="headerlink" title="2.1打开链接，看到源码"></a>2.1打开链接，看到源码</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/19.png" alt="微信图片_20181012144505"></p><h3 id="2-2观察源码，有两个waf要绕过1：addslashes函数，2：正则，第一个addslashes可以通过在value外加上-形成复杂变量的方式绕过，第二个正则可以通过在（前加上-0a截断进行绕过，绕过后通过菜刀构造一句话木马查看flag"><a href="#2-2观察源码，有两个waf要绕过1：addslashes函数，2：正则，第一个addslashes可以通过在value外加上-形成复杂变量的方式绕过，第二个正则可以通过在（前加上-0a截断进行绕过，绕过后通过菜刀构造一句话木马查看flag" class="headerlink" title="2.2观察源码，有两个waf要绕过1：addslashes函数，2：正则，第一个addslashes可以通过在value外加上${}形成复杂变量的方式绕过，第二个正则可以通过在（前加上%0a截断进行绕过，绕过后通过菜刀构造一句话木马查看flag"></a>2.2观察源码，有两个waf要绕过1：addslashes函数，2：正则，第一个addslashes可以通过在value外加上${}形成复杂变量的方式绕过，第二个正则可以通过在（前加上%0a截断进行绕过，绕过后通过菜刀构造一句话木马查看flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/20.png" alt="微信图片_20181012144505"></p><h3 id="2-3得到flag"><a href="#2-3得到flag" class="headerlink" title="2.3得到flag"></a>2.3得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForThirdMD/21.png" alt="微信图片_20181012144505"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;crypto&quot;&gt;&lt;a href=&quot;#crypto&quot; class=&quot;headerlink&quot; title=&quot;crypto&quot;&gt;&lt;/a&gt;crypto&lt;/h1&gt;&lt;h2 id=&quot;1、easy-rsa&quot;&gt;&lt;a href=&quot;#1、easy-rsa&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="makerctfWP" scheme="http://yoursite.com/tags/makerctfWP/"/>
    
  </entry>
  
  <entry>
    <title>南邮ctf练习平台web（31-34题）</title>
    <link href="http://yoursite.com/2019/01/05/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0web%EF%BC%8831-34%E9%A2%98%EF%BC%89/"/>
    <id>http://yoursite.com/2019/01/05/南邮ctf练习平台web（31-34题）/</id>
    <published>2019-01-05T15:29:52.000Z</published>
    <updated>2019-04-17T12:39:57.501Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮ctf"><a href="#南邮ctf" class="headerlink" title="南邮ctf"></a>南邮ctf</h1><h2 id="31、file-get-contents"><a href="#31、file-get-contents" class="headerlink" title="31、file_get_contents"></a>31、file_get_contents</h2><h3 id="31-1、f12"><a href="#31-1、f12" class="headerlink" title="31.1、f12"></a>31.1、f12</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/17.png" alt="17"></p><h3 id="31-2、看到了file-get-contents立马想到了php的input的伪协议"><a href="#31-2、看到了file-get-contents立马想到了php的input的伪协议" class="headerlink" title="31.2、看到了file_get_contents立马想到了php的input的伪协议"></a>31.2、看到了file_get_contents立马想到了php的input的伪协议</h3><p>尝试构造payload?file=php://input,并在post包最后加入meizijiu得到flag</p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/18.png" alt="18"></p><h2 id="32、变量覆盖2"><a href="#32、变量覆盖2" class="headerlink" title="32、变量覆盖2"></a>32、变量覆盖2</h2><h3 id="32-1、f12"><a href="#32-1、f12" class="headerlink" title="32.1、f12"></a>32.1、f12</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/30.png" alt="30"></p><h3 id="32-2、观察发现，构造-name-meizijiu233-foreach会将name赋予-key-meizijiu233赋予-value，因此下方变为-name-meizijiu233，实现了变量覆盖，得到flag"><a href="#32-2、观察发现，构造-name-meizijiu233-foreach会将name赋予-key-meizijiu233赋予-value，因此下方变为-name-meizijiu233，实现了变量覆盖，得到flag" class="headerlink" title="32.2、观察发现，构造?name=meizijiu233,foreach会将name赋予 $key,meizijiu233赋予$value，因此下方变为$name=meizijiu233，实现了变量覆盖，得到flag"></a>32.2、观察发现，构造?name=meizijiu233,foreach会将name赋予 $key,meizijiu233赋予$value，因此下方变为$name=meizijiu233，实现了变量覆盖，得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/31.png" alt="31"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;南邮ctf&quot;&gt;&lt;a href=&quot;#南邮ctf&quot; class=&quot;headerlink&quot; title=&quot;南邮ctf&quot;&gt;&lt;/a&gt;南邮ctf&lt;/h1&gt;&lt;h2 id=&quot;31、file-get-contents&quot;&gt;&lt;a href=&quot;#31、file-get-contents&quot;
      
    
    </summary>
    
    
      <category term="南邮ctf练习平台" scheme="http://yoursite.com/tags/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>南邮ctf练习平台web（26-30题）</title>
    <link href="http://yoursite.com/2018/12/17/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0web%EF%BC%8826-30%E9%A2%98%EF%BC%89/"/>
    <id>http://yoursite.com/2018/12/17/南邮ctf练习平台web（26-30题）/</id>
    <published>2018-12-17T14:07:24.000Z</published>
    <updated>2019-04-17T12:39:23.536Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮ctf"><a href="#南邮ctf" class="headerlink" title="南邮ctf"></a>南邮ctf</h1><h2 id="26、php反序列化"><a href="#26、php反序列化" class="headerlink" title="26、php反序列化"></a>26、php反序列化</h2><p> 题目挂了</p><h2 id="27、SQL-Injection"><a href="#27、SQL-Injection" class="headerlink" title="27、SQL Injection"></a>27、SQL Injection</h2><h3 id="27-1、先看题"><a href="#27-1、先看题" class="headerlink" title="27.1、先看题"></a>27.1、先看题</h3><p> <img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/82.png" alt="82"></p><h3 id="27-2、根据提示中‘-’意识到可以用-注释掉‘，从而构建永真式，可以构建payload：-username-admin-amp-password-or-1-1-23，从而使查询语句变为SELECT-FROM-users-WHERE-name-’admin-’-AND-pass-’-or-1-1，得到flag"><a href="#27-2、根据提示中‘-’意识到可以用-注释掉‘，从而构建永真式，可以构建payload：-username-admin-amp-password-or-1-1-23，从而使查询语句变为SELECT-FROM-users-WHERE-name-’admin-’-AND-pass-’-or-1-1，得到flag" class="headerlink" title="27.2、根据提示中‘\’意识到可以用\注释掉‘，从而构建永真式，可以构建payload：?username=admin \&amp;password=or 1=1%23，从而使查询语句变为SELECT * FROM users WHERE name=’admin \’ AND pass=’ or 1=1，得到flag"></a>27.2、根据提示中‘\’意识到可以用\注释掉‘，从而构建永真式，可以构建payload：?username=admin \&amp;password=or 1=1%23，从而使查询语句变为SELECT * FROM users WHERE name=’admin \’ AND pass=’ or 1=1，得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/83.png" alt="83"></p><h2 id="28、综合题"><a href="#28、综合题" class="headerlink" title="28、综合题"></a>28、综合题</h2><h3 id="28-1点开后发现是jsfuck"><a href="#28-1点开后发现是jsfuck" class="headerlink" title="28.1点开后发现是jsfuck"></a>28.1点开后发现是jsfuck</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/24.png" alt="24"></p><h3 id="28-2执行后，得到了"><a href="#28-2执行后，得到了" class="headerlink" title="28.2执行后，得到了"></a>28.2执行后，得到了</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/25.png" alt="25"></p><h3 id="28-3访问文件"><a href="#28-3访问文件" class="headerlink" title="28.3访问文件"></a>28.3访问文件</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/26.png" alt="26"></p><p>猜测在header里</p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/27.png" alt="27"></p><h3 id="28-4上网查询historyofbash访问"><a href="#28-4上网查询historyofbash访问" class="headerlink" title="28.4上网查询historyofbash访问"></a>28.4上网查询historyofbash访问</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/28.png" alt="28"></p><h3 id="28-5下载flagbak-zip"><a href="#28-5下载flagbak-zip" class="headerlink" title="28.5下载flagbak.zip"></a>28.5下载flagbak.zip</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/29.png" alt="29"></p><h3 id="28-6点开得到flag"><a href="#28-6点开得到flag" class="headerlink" title="28.6点开得到flag"></a>28.6点开得到flag</h3><h2 id="29、system"><a href="#29、system" class="headerlink" title="29、system"></a>29、system</h2><p>题目坏了</p><h2 id="30、SQL注入2"><a href="#30、SQL注入2" class="headerlink" title="30、SQL注入2"></a>30、SQL注入2</h2><h3 id="30-1、看下"><a href="#30-1、看下" class="headerlink" title="30.1、看下"></a>30.1、看下</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/84.png" alt="84"></p><h3 id="30-2、还是进入source"><a href="#30-2、还是进入source" class="headerlink" title="30.2、还是进入source"></a>30.2、还是进入source</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/85.png" alt="85"></p><h3 id="30-3、分析后发现，得到flag的关键是-pass-query-pw-，根据提示的union想到，只要让pass中的原本的查询注释掉，然后union查询和query相同的值，就可以使二者相等，因此构造user-’union-select-md5-1-amp-pass-1-postpayload后得到flag"><a href="#30-3、分析后发现，得到flag的关键是-pass-query-pw-，根据提示的union想到，只要让pass中的原本的查询注释掉，然后union查询和query相同的值，就可以使二者相等，因此构造user-’union-select-md5-1-amp-pass-1-postpayload后得到flag" class="headerlink" title="30.3、分析后发现，得到flag的关键是$pass=$query[pw]，根据提示的union想到，只要让pass中的原本的查询注释掉，然后union查询和query相同的值，就可以使二者相等，因此构造user=’union select md5(1)#&amp;pass=1,postpayload后得到flag"></a>30.3、分析后发现，得到flag的关键是$pass=$query[pw]，根据提示的union想到，只要让pass中的原本的查询注释掉，然后union查询和query相同的值，就可以使二者相等，因此构造user=’union select md5(1)#&amp;pass=1,postpayload后得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/86.png" alt="86"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;南邮ctf&quot;&gt;&lt;a href=&quot;#南邮ctf&quot; class=&quot;headerlink&quot; title=&quot;南邮ctf&quot;&gt;&lt;/a&gt;南邮ctf&lt;/h1&gt;&lt;h2 id=&quot;26、php反序列化&quot;&gt;&lt;a href=&quot;#26、php反序列化&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="南邮ctf练习平台" scheme="http://yoursite.com/tags/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>南邮ctf练习平台web（21-25题）</title>
    <link href="http://yoursite.com/2018/12/09/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0web%EF%BC%8821-25%E9%A2%98%EF%BC%89/"/>
    <id>http://yoursite.com/2018/12/09/南邮ctf练习平台web（21-25题）/</id>
    <published>2018-12-09T07:22:26.000Z</published>
    <updated>2019-04-17T12:38:42.374Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮ctf练习平台"><a href="#南邮ctf练习平台" class="headerlink" title="南邮ctf练习平台"></a>南邮ctf练习平台</h1><h2 id="21、上传绕过"><a href="#21、上传绕过" class="headerlink" title="21、上传绕过"></a>21、上传绕过</h2><h3 id="21-1、打开"><a href="#21-1、打开" class="headerlink" title="21.1、打开"></a>21.1、打开</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/70.png" alt="70"></p><h3 id="21-2、尝试过各种方法后发现1-php-jpg-没有被识别为php文件"><a href="#21-2、尝试过各种方法后发现1-php-jpg-没有被识别为php文件" class="headerlink" title="21.2、尝试过各种方法后发现1.php.jpg 没有被识别为php文件"></a>21.2、尝试过各种方法后发现1.php.jpg 没有被识别为php文件</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/71.png" alt="71"></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/72.png" alt="72"></p><h3 id="21-3、试过很多方法无效后，这里说下最终有效的方法，首先抓包放进repeater"><a href="#21-3、试过很多方法无效后，这里说下最终有效的方法，首先抓包放进repeater" class="headerlink" title="21.3、试过很多方法无效后，这里说下最终有效的方法，首先抓包放进repeater"></a>21.3、试过很多方法无效后，这里说下最终有效的方法，首先抓包放进repeater</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/73.png" alt="73"></p><h3 id="21-4、在hex中把1-php截断"><a href="#21-4、在hex中把1-php截断" class="headerlink" title="21.4、在hex中把1.php截断"></a>21.4、在hex中把1.php截断</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/74.png" alt="74"></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/75.png" alt="75"></p><h3 id="21-5、发送改完的包后得到flag"><a href="#21-5、发送改完的包后得到flag" class="headerlink" title="21.5、发送改完的包后得到flag"></a>21.5、发送改完的包后得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/76.png" alt="76"></p><h2 id="22、sql注入1"><a href="#22、sql注入1" class="headerlink" title="22、sql注入1"></a>22、sql注入1</h2><h3 id="22-1先看下题目"><a href="#22-1先看下题目" class="headerlink" title="22.1先看下题目"></a>22.1先看下题目</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/77.png" alt="77"></p><h3 id="22-2注意到了source，先看一眼"><a href="#22-2注意到了source，先看一眼" class="headerlink" title="22.2注意到了source，先看一眼"></a>22.2注意到了source，先看一眼</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/78.png" alt="78"></p><h3 id="22-3读后发现要想得到flag要满足用户名为admin，同时密码正确，发现没有过滤后，尝试将对密码的判断注释掉，成功得到flag"><a href="#22-3读后发现要想得到flag要满足用户名为admin，同时密码正确，发现没有过滤后，尝试将对密码的判断注释掉，成功得到flag" class="headerlink" title="22.3读后发现要想得到flag要满足用户名为admin，同时密码正确，发现没有过滤后，尝试将对密码的判断注释掉，成功得到flag"></a>22.3读后发现要想得到flag要满足用户名为admin，同时密码正确，发现没有过滤后，尝试将对密码的判断注释掉，成功得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/79.png" alt="79"></p><h2 id="23、passcheck"><a href="#23、passcheck" class="headerlink" title="23、passcheck"></a>23、passcheck</h2><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/22.png" alt="22"></p><h3 id="23-1、观察代码发现，可以利用strcmp对于不同类型的判断错误返回零的漏洞"><a href="#23-1、观察代码发现，可以利用strcmp对于不同类型的判断错误返回零的漏洞" class="headerlink" title="23.1、观察代码发现，可以利用strcmp对于不同类型的判断错误返回零的漏洞"></a>23.1、观察代码发现，可以利用strcmp对于不同类型的判断错误返回零的漏洞</h3><p>构造payload，pass[]=1得到flag</p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/23.png" alt="23"></p><h2 id="24、起名字真难"><a href="#24、起名字真难" class="headerlink" title="24、起名字真难"></a>24、起名字真难</h2><h3 id="24-1、看一下"><a href="#24-1、看一下" class="headerlink" title="24.1、看一下"></a>24.1、看一下</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/80.png" alt="80"></p><h3 id="24-2、源码中显示，对key的限制是数值上必须等于54975581388，但每位都不能是非零数字，看到特意让出了0，而且要不是数字的数字，想到了十六进制，将54975581388十六进制化后发现刚好每位都是c，提交得到flag。"><a href="#24-2、源码中显示，对key的限制是数值上必须等于54975581388，但每位都不能是非零数字，看到特意让出了0，而且要不是数字的数字，想到了十六进制，将54975581388十六进制化后发现刚好每位都是c，提交得到flag。" class="headerlink" title="24.2、源码中显示，对key的限制是数值上必须等于54975581388，但每位都不能是非零数字，看到特意让出了0，而且要不是数字的数字，想到了十六进制，将54975581388十六进制化后发现刚好每位都是c，提交得到flag。"></a>24.2、源码中显示，对key的限制是数值上必须等于54975581388，但每位都不能是非零数字，看到特意让出了0，而且要不是数字的数字，想到了十六进制，将54975581388十六进制化后发现刚好每位都是c，提交得到flag。</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/81.png" alt="81"></p><h2 id="25、密码重置1"><a href="#25、密码重置1" class="headerlink" title="25、密码重置1"></a>25、密码重置1</h2><h3 id="25-1打开"><a href="#25-1打开" class="headerlink" title="25.1打开"></a>25.1打开</h3><h3 id="25-2由于题目描述为更改admin的密码，但此处无法更改账号，f12"><a href="#25-2由于题目描述为更改admin的密码，但此处无法更改账号，f12" class="headerlink" title="25.2由于题目描述为更改admin的密码，但此处无法更改账号，f12"></a>25.2由于题目描述为更改admin的密码，但此处无法更改账号，f12</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/19.png" alt="19"></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/20.png" alt="20"></p><h3 id="25-3注意到readonly，同时user和url中的user1不同，用工具解码后，将user1改为admin的base64，同时删除readonly，将账号改为admin，得到flag"><a href="#25-3注意到readonly，同时user和url中的user1不同，用工具解码后，将user1改为admin的base64，同时删除readonly，将账号改为admin，得到flag" class="headerlink" title="25.3注意到readonly，同时user和url中的user1不同，用工具解码后，将user1改为admin的base64，同时删除readonly，将账号改为admin，得到flag"></a>25.3注意到readonly，同时user和url中的user1不同，用工具解码后，将user1改为admin的base64，同时删除readonly，将账号改为admin，得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/21.png" alt="21"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;南邮ctf练习平台&quot;&gt;&lt;a href=&quot;#南邮ctf练习平台&quot; class=&quot;headerlink&quot; title=&quot;南邮ctf练习平台&quot;&gt;&lt;/a&gt;南邮ctf练习平台&lt;/h1&gt;&lt;h2 id=&quot;21、上传绕过&quot;&gt;&lt;a href=&quot;#21、上传绕过&quot; class=&quot;he
      
    
    </summary>
    
    
      <category term="南邮ctf练习平台" scheme="http://yoursite.com/tags/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>南邮ctf练习平台web（16-20题）</title>
    <link href="http://yoursite.com/2018/11/30/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0web%EF%BC%8816-20%E9%A2%98%EF%BC%89/"/>
    <id>http://yoursite.com/2018/11/30/南邮ctf练习平台web（16-20题）/</id>
    <published>2018-11-30T11:01:55.000Z</published>
    <updated>2019-04-17T12:38:49.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮ctf练习平台"><a href="#南邮ctf练习平台" class="headerlink" title="南邮ctf练习平台"></a>南邮ctf练习平台</h1><h2 id="16、bypass-again"><a href="#16、bypass-again" class="headerlink" title="16、bypass again"></a>16、bypass again</h2><h3 id="16-1、打开"><a href="#16-1、打开" class="headerlink" title="16.1、打开"></a>16.1、打开</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/66.png" alt="66"></p><h3 id="16-2、仍然是php弱类型，构造数组绕过"><a href="#16-2、仍然是php弱类型，构造数组绕过" class="headerlink" title="16.2、仍然是php弱类型，构造数组绕过"></a>16.2、仍然是php弱类型，构造数组绕过</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/67.png" alt="67"></p><h3 id="17、变量覆盖"><a href="#17、变量覆盖" class="headerlink" title="17、变量覆盖"></a>17、变量覆盖</h3><h3 id="17-1、进入题目"><a href="#17-1、进入题目" class="headerlink" title="17.1、进入题目"></a>17.1、进入题目</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/1.png" alt="1"></p><h3 id="17-2、在source-php中找到线索"><a href="#17-2、在source-php中找到线索" class="headerlink" title="17.2、在source.php中找到线索"></a>17.2、在source.php中找到线索</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;) &#123; ?&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">    extract($_POST);</span><br><span class="line">   if ($pass == $thepassword_123) &#123; ?&gt;</span><br><span class="line">    &lt;div class=&quot;alert alert-success&quot;&gt;</span><br><span class="line">       &lt;code&gt;&lt;?php echo $theflag; ?&gt;&lt;/code&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">     &lt;?php &#125; ?&gt;</span><br><span class="line"> &lt;?php &#125; ?&gt;</span><br></pre></td></tr></table></figure><h3 id="17-3、发现没有对payload进行限制，同时联想到题目变量覆盖，因此构造payload"><a href="#17-3、发现没有对payload进行限制，同时联想到题目变量覆盖，因此构造payload" class="headerlink" title="17.3、发现没有对payload进行限制，同时联想到题目变量覆盖，因此构造payload"></a>17.3、发现没有对payload进行限制，同时联想到题目变量覆盖，因此构造payload</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/2.png" alt="1"></p><h3 id="17-4、得到flag"><a href="#17-4、得到flag" class="headerlink" title="17.4、得到flag"></a>17.4、得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/3.png" alt="1"></p><h2 id="18、php是世界上最好的语言"><a href="#18、php是世界上最好的语言" class="headerlink" title="18、php是世界上最好的语言"></a>18、php是世界上最好的语言</h2><p>题目挂了</p><h3 id="19、伪装者"><a href="#19、伪装者" class="headerlink" title="19、伪装者"></a>19、伪装者</h3><h3 id="19-1看到只能本地登录，立马想到XFF，因此在包中加入X-Forwarded-For-127-0-0-1"><a href="#19-1看到只能本地登录，立马想到XFF，因此在包中加入X-Forwarded-For-127-0-0-1" class="headerlink" title="19.1看到只能本地登录，立马想到XFF，因此在包中加入X-Forwarded_For: 127.0.0.1"></a>19.1看到只能本地登录，立马想到XFF，因此在包中加入X-Forwarded_For: 127.0.0.1</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/16.png" alt="16"></p><h3 id="19-2失败了"><a href="#19-2失败了" class="headerlink" title="19.2失败了"></a>19.2失败了</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/68.png" alt="68"></p><h3 id="19-3尝试换成client-ip，成功得到flag（这里可能对xff做出了限制）"><a href="#19-3尝试换成client-ip，成功得到flag（这里可能对xff做出了限制）" class="headerlink" title="19.3尝试换成client-ip，成功得到flag（这里可能对xff做出了限制）"></a>19.3尝试换成client-ip，成功得到flag（这里可能对xff做出了限制）</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/69.png" alt="69"></p><h2 id="20、header"><a href="#20、header" class="headerlink" title="20、header"></a>20、header</h2><p>题目挂了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;南邮ctf练习平台&quot;&gt;&lt;a href=&quot;#南邮ctf练习平台&quot; class=&quot;headerlink&quot; title=&quot;南邮ctf练习平台&quot;&gt;&lt;/a&gt;南邮ctf练习平台&lt;/h1&gt;&lt;h2 id=&quot;16、bypass-again&quot;&gt;&lt;a href=&quot;#16、bypass-
      
    
    </summary>
    
    
      <category term="南邮ctf练习平台" scheme="http://yoursite.com/tags/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>南邮ctf练习平台web（11-15题）</title>
    <link href="http://yoursite.com/2018/11/20/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0web%EF%BC%8811-15%E9%A2%98%EF%BC%89/"/>
    <id>http://yoursite.com/2018/11/20/南邮ctf练习平台web（11-15题）/</id>
    <published>2018-11-20T09:22:50.000Z</published>
    <updated>2019-04-17T12:37:44.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮ctf练习平台"><a href="#南邮ctf练习平台" class="headerlink" title="南邮ctf练习平台"></a>南邮ctf练习平台</h1><h2 id="11、Download-！"><a href="#11、Download-！" class="headerlink" title="11、Download~！"></a>11、Download~！</h2><h3 id="11-1、题目挂了"><a href="#11-1、题目挂了" class="headerlink" title="11.1、题目挂了"></a>11.1、题目挂了</h3><h2 id="12、COOKIES"><a href="#12、COOKIES" class="headerlink" title="12、COOKIES"></a>12、COOKIES</h2><h3 id="12-1、打开后一片空白"><a href="#12-1、打开后一片空白" class="headerlink" title="12.1、打开后一片空白"></a>12.1、打开后一片空白</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/9.png" alt="9"></p><h3 id="12-2、用burp抓一下包"><a href="#12-2、用burp抓一下包" class="headerlink" title="12.2、用burp抓一下包"></a>12.2、用burp抓一下包</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/10.png" alt="10"></p><h3 id="12-3、联想题目，怀疑与Set—Cookie有关，因此学习一下"><a href="#12-3、联想题目，怀疑与Set—Cookie有关，因此学习一下" class="headerlink" title="12.3、联想题目，怀疑与Set—Cookie有关，因此学习一下"></a>12.3、联想题目，怀疑与Set—Cookie有关，因此学习一下</h3><p>看完后我的理解是，set-cookie就是让浏览器将cookie改为发来的setcookie的值，因此猜想，只要再次进入网页，把接下来的包的login=0改为login=1，就可得到flag</p><h3 id="12-4、截住，并修改"><a href="#12-4、截住，并修改" class="headerlink" title="12.4、截住，并修改"></a>12.4、截住，并修改</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/11.png" alt="11"></p><h3 id="12-5、得到flag"><a href="#12-5、得到flag" class="headerlink" title="12.5、得到flag"></a>12.5、得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/12.png" alt="12"></p><h2 id="13、mysql"><a href="#13、mysql" class="headerlink" title="13、mysql"></a>13、mysql</h2><h3 id="13-1、根据提示看一眼robots"><a href="#13-1、根据提示看一眼robots" class="headerlink" title="13.1、根据提示看一眼robots"></a>13.1、根据提示看一眼robots</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/13.png" alt="13"></p><h3 id="13-2、观察代码得知，提交任何非1024id都可得到查询结果，因此怀疑要构造id不等于1024，但在mysql语句中的id-1024，由于存在intval函数，因此构造id-1024-1"><a href="#13-2、观察代码得知，提交任何非1024id都可得到查询结果，因此怀疑要构造id不等于1024，但在mysql语句中的id-1024，由于存在intval函数，因此构造id-1024-1" class="headerlink" title="13.2、观察代码得知，提交任何非1024id都可得到查询结果，因此怀疑要构造id不等于1024，但在mysql语句中的id=1024，由于存在intval函数，因此构造id=1024.1"></a>13.2、观察代码得知，提交任何非1024id都可得到查询结果，因此怀疑要构造id不等于1024，但在mysql语句中的id=1024，由于存在intval函数，因此构造id=1024.1</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/14.png" alt="14"></h3><h3 id="13-3、得到flag"><a href="#13-3、得到flag" class="headerlink" title="13.3、得到flag"></a>13.3、得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/15.png" alt="15"></p><h2 id="14、GBK-Injection"><a href="#14、GBK-Injection" class="headerlink" title="14、GBK Injection"></a>14、GBK Injection</h2><h3 id="14-1、根据题目猜测是宽字节注入，先进链接看一看，可以看到当id为1的时候他在1的两端加入了两个单引号"><a href="#14-1、根据题目猜测是宽字节注入，先进链接看一看，可以看到当id为1的时候他在1的两端加入了两个单引号" class="headerlink" title="14.1、根据题目猜测是宽字节注入，先进链接看一看，可以看到当id为1的时候他在1的两端加入了两个单引号"></a>14.1、根据题目猜测是宽字节注入，先进链接看一看，可以看到当id为1的时候他在1的两端加入了两个单引号</h3><h3 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/58.png" alt="58"></h3><h3 id="14-2尝试用’闭合，看到被反斜杠转义，在这里将反斜杠和-df组成双字节，即可绕过（因为chrome默认unicode编码，显示有问题，所以我改成了火狐）"><a href="#14-2尝试用’闭合，看到被反斜杠转义，在这里将反斜杠和-df组成双字节，即可绕过（因为chrome默认unicode编码，显示有问题，所以我改成了火狐）" class="headerlink" title="14.2尝试用’闭合，看到被反斜杠转义，在这里将反斜杠和%df组成双字节，即可绕过（因为chrome默认unicode编码，显示有问题，所以我改成了火狐）"></a>14.2尝试用’闭合，看到被反斜杠转义，在这里将反斜杠和%df组成双字节，即可绕过（因为chrome默认unicode编码，显示有问题，所以我改成了火狐）</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/59.png" alt="59"></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/60.png" alt="60"></p><h3 id="14-3既然闭合了，那么就可以随意注入了，先看一下库名，构造payload"><a href="#14-3既然闭合了，那么就可以随意注入了，先看一下库名，构造payload" class="headerlink" title="14.3既然闭合了，那么就可以随意注入了，先看一下库名，构造payload"></a>14.3既然闭合了，那么就可以随意注入了，先看一下库名，构造payload</h3><p>?id=-1%df%27%20union%20select%201,database()%23</p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/62.png" alt="62"></p><h3 id="14-4查询表名"><a href="#14-4查询表名" class="headerlink" title="14.4查询表名"></a>14.4查询表名</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/63.png" alt="63"></p><h3 id="14-5查询字段名（这里一直试到了ctf4才看到flag）"><a href="#14-5查询字段名（这里一直试到了ctf4才看到flag）" class="headerlink" title="14.5查询字段名（这里一直试到了ctf4才看到flag）"></a>14.5查询字段名（这里一直试到了ctf4才看到flag）</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/64.png" alt="64"></p><h3 id="14-6查询字段内容"><a href="#14-6查询字段内容" class="headerlink" title="14.6查询字段内容"></a>14.6查询字段内容</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/65.png" alt="65"></p><h2 id="15、-x00"><a href="#15、-x00" class="headerlink" title="15、/x00"></a>15、/x00</h2><h3 id="15-1、观察源码"><a href="#15-1、观察源码" class="headerlink" title="15.1、观察源码"></a>15.1、观察源码</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/32.png" alt="32"></p><h3 id="15-2、通过学习知道ereg函数有两个漏洞"><a href="#15-2、通过学习知道ereg函数有两个漏洞" class="headerlink" title="15.2、通过学习知道ereg函数有两个漏洞"></a>15.2、通过学习知道ereg函数有两个漏洞</h3><p>1、碰到了/x00会被截断</p><p>2、如果碰到了数组，那么会返回null</p><p>因此此题也有了两种思路</p><h3 id="15-3、思路一：构造payload-nctf-1-00-23biubiubiu，因为到-x00阶段，所以ereg函数看来只有1，二strpos函数则会认为含有-biubiubiu"><a href="#15-3、思路一：构造payload-nctf-1-00-23biubiubiu，因为到-x00阶段，所以ereg函数看来只有1，二strpos函数则会认为含有-biubiubiu" class="headerlink" title="15.3、思路一：构造payload?nctf=1%00%23biubiubiu，因为到/x00阶段，所以ereg函数看来只有1，二strpos函数则会认为含有#biubiubiu"></a>15.3、思路一：构造payload?nctf=1%00%23biubiubiu，因为到/x00阶段，所以ereg函数看来只有1，二strpos函数则会认为含有#biubiubiu</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/33.png" alt="33"></p><h3 id="15-4、思路二：直接构造nctf-1-让两个函数都返回空值，刚好全部绕过"><a href="#15-4、思路二：直接构造nctf-1-让两个函数都返回空值，刚好全部绕过" class="headerlink" title="15.4、思路二：直接构造nctf[]=1,让两个函数都返回空值，刚好全部绕过"></a>15.4、思路二：直接构造nctf[]=1,让两个函数都返回空值，刚好全部绕过</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/34.png" alt="34"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;南邮ctf练习平台&quot;&gt;&lt;a href=&quot;#南邮ctf练习平台&quot; class=&quot;headerlink&quot; title=&quot;南邮ctf练习平台&quot;&gt;&lt;/a&gt;南邮ctf练习平台&lt;/h1&gt;&lt;h2 id=&quot;11、Download-！&quot;&gt;&lt;a href=&quot;#11、Download-
      
    
    </summary>
    
    
      <category term="南邮ctf练习平台" scheme="http://yoursite.com/tags/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>南邮ctf练习平台web（6-10题）</title>
    <link href="http://yoursite.com/2018/11/10/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0web%EF%BC%886-10%E9%A2%98%EF%BC%89/"/>
    <id>http://yoursite.com/2018/11/10/南邮ctf练习平台web（6-10题）/</id>
    <published>2018-11-10T09:21:42.000Z</published>
    <updated>2019-04-17T12:37:16.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮ctf练习平台"><a href="#南邮ctf练习平台" class="headerlink" title="南邮ctf练习平台"></a>南邮ctf练习平台</h1><h2 id="6、AAencode"><a href="#6、AAencode" class="headerlink" title="6、AAencode"></a>6、AAencode</h2><h3 id="6-1打开看到奇怪的东西"><a href="#6-1打开看到奇怪的东西" class="headerlink" title="6.1打开看到奇怪的东西"></a>6.1打开看到奇怪的东西</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/6.png" alt="1"></p><h3 id="6-2用unicode打开"><a href="#6-2用unicode打开" class="headerlink" title="6.2用unicode打开"></a>6.2用unicode打开</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/7.png" alt="7"></p><h3 id="6-3看起来有点像jsfuck，于是直接在chrome的console里输入，得到flag"><a href="#6-3看起来有点像jsfuck，于是直接在chrome的console里输入，得到flag" class="headerlink" title="6.3看起来有点像jsfuck，于是直接在chrome的console里输入，得到flag"></a>6.3看起来有点像jsfuck，于是直接在chrome的console里输入，得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/8.png" alt="8"></p><h2 id="7、单身二十年"><a href="#7、单身二十年" class="headerlink" title="7、单身二十年"></a>7、单身二十年</h2><h3 id="7-1、打开看到"><a href="#7-1、打开看到" class="headerlink" title="7.1、打开看到"></a>7.1、打开看到</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/46.png" alt="46"></p><h3 id="7-2、按照提示"><a href="#7-2、按照提示" class="headerlink" title="7.2、按照提示"></a>7.2、按照提示</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/47.png" alt="47"></h3><h3 id="7-3、抓包看看，在响应包里看到"><a href="#7-3、抓包看看，在响应包里看到" class="headerlink" title="7 .3、抓包看看，在响应包里看到"></a>7 .3、抓包看看，在响应包里看到</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/48.png" alt="48"></p><h2 id="8、phpdecode"><a href="#8、phpdecode" class="headerlink" title="8、phpdecode"></a>8、phpdecode</h2><h3 id="​-8-1、题目"><a href="#​-8-1、题目" class="headerlink" title="​    8.1、题目"></a>​    8.1、题目</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/49.png" alt="49"></p><h3 id="8-2、这里只需要在本地的php环境里运行一下就行了，需要注意的是eval是把字符串当作函数执行，不会把函数结果打印出来，这里要改成echo才能把函数结果打印出来，得到flag"><a href="#8-2、这里只需要在本地的php环境里运行一下就行了，需要注意的是eval是把字符串当作函数执行，不会把函数结果打印出来，这里要改成echo才能把函数结果打印出来，得到flag" class="headerlink" title="8.2、这里只需要在本地的php环境里运行一下就行了，需要注意的是eval是把字符串当作函数执行，不会把函数结果打印出来，这里要改成echo才能把函数结果打印出来，得到flag"></a>8.2、这里只需要在本地的php环境里运行一下就行了，需要注意的是eval是把字符串当作函数执行，不会把函数结果打印出来，这里要改成echo才能把函数结果打印出来，得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/50.png" alt="50"></p><h2 id="9、文件包含"><a href="#9、文件包含" class="headerlink" title="9、文件包含"></a>9、文件包含</h2><h3 id="9-1、打开链接"><a href="#9-1、打开链接" class="headerlink" title="9.1、打开链接"></a>9.1、打开链接</h3><h3 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/51.png" alt="51"></h3><h3 id="​-9-2、进入，看到上方有一个提交get参数file，同时联想文件包含，想到php伪协议"><a href="#​-9-2、进入，看到上方有一个提交get参数file，同时联想文件包含，想到php伪协议" class="headerlink" title="​    9.2、进入，看到上方有一个提交get参数file，同时联想文件包含，想到php伪协议"></a>​    9.2、进入，看到上方有一个提交get参数file，同时联想文件包含，想到php伪协议</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/52.png" alt="52"></p><h3 id="9-3、构造payload"><a href="#9-3、构造payload" class="headerlink" title="9.3、构造payload"></a>9.3、构造payload</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/53.png" alt="53"></p><h3 id="9-4、base64解码后得到"><a href="#9-4、base64解码后得到" class="headerlink" title="9.4、base64解码后得到"></a>9.4、base64解码后得到</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/54.png" alt="54"></p><h2 id="10、单身一百年也没用"><a href="#10、单身一百年也没用" class="headerlink" title="10、单身一百年也没用"></a>10、单身一百年也没用</h2><h3 id="10-1、打开，既视感"><a href="#10-1、打开，既视感" class="headerlink" title="10.1、打开，既视感"></a>10.1、打开，既视感</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/55.png" alt="55"></p><h3 id="10-2、点开后发现了区别，前一页跳转的目标是index-php，而页面跳转的是no-key…-因此推测在index-php中含有一个跳转的语句，这题同样可以用单身二十年的解法来解，但是这里还可以借助于chrome浏览器的network功能"><a href="#10-2、点开后发现了区别，前一页跳转的目标是index-php，而页面跳转的是no-key…-因此推测在index-php中含有一个跳转的语句，这题同样可以用单身二十年的解法来解，但是这里还可以借助于chrome浏览器的network功能" class="headerlink" title="10.2、点开后发现了区别，前一页跳转的目标是index.php，而页面跳转的是no_key….因此推测在index.php中含有一个跳转的语句，这题同样可以用单身二十年的解法来解，但是这里还可以借助于chrome浏览器的network功能"></a>10.2、点开后发现了区别，前一页跳转的目标是index.php，而页面跳转的是no_key….因此推测在index.php中含有一个跳转的语句，这题同样可以用单身二十年的解法来解，但是这里还可以借助于chrome浏览器的network功能</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/56.png" alt="56"></p><h3 id="10-3、查看响应头得到flag"><a href="#10-3、查看响应头得到flag" class="headerlink" title="10.3、查看响应头得到flag"></a>10.3、查看响应头得到flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/57.png" alt="57"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;南邮ctf练习平台&quot;&gt;&lt;a href=&quot;#南邮ctf练习平台&quot; class=&quot;headerlink&quot; title=&quot;南邮ctf练习平台&quot;&gt;&lt;/a&gt;南邮ctf练习平台&lt;/h1&gt;&lt;h2 id=&quot;6、AAencode&quot;&gt;&lt;a href=&quot;#6、AAencode&quot; cla
      
    
    </summary>
    
    
      <category term="南邮ctf练习平台" scheme="http://yoursite.com/tags/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>南邮ctf练习平台web（1-5题）</title>
    <link href="http://yoursite.com/2018/10/25/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0web%EF%BC%881-5%E9%A2%98%EF%BC%89/"/>
    <id>http://yoursite.com/2018/10/25/南邮ctf练习平台web（1-5题）/</id>
    <published>2018-10-25T10:23:53.000Z</published>
    <updated>2019-04-17T12:36:49.434Z</updated>
    
    <content type="html"><![CDATA[<h1 id="南邮ctf练习平台"><a href="#南邮ctf练习平台" class="headerlink" title="南邮ctf练习平台"></a>南邮ctf练习平台</h1><h2 id="1、签到题"><a href="#1、签到题" class="headerlink" title="1、签到题"></a>1、签到题</h2><h3 id="1-1、打开"><a href="#1-1、打开" class="headerlink" title="1.1、打开"></a>1.1、打开</h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/35.png" alt="35"></h3><h3 id="1-2、查看源码直接得到"><a href="#1-2、查看源码直接得到" class="headerlink" title="1.2、查看源码直接得到"></a>1.2、查看源码直接得到</h3><h3 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="C:\Users\d1lute\Desktop\picture\36.png" alt="36"></h3><h2 id="2、md5-collision"><a href="#2、md5-collision" class="headerlink" title="2、md5 collision"></a>2、md5 collision</h2><h2 id="2-1、题目给出提示"><a href="#2-1、题目给出提示" class="headerlink" title="2.1、题目给出提示"></a>2.1、题目给出提示</h2><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/37.png" alt="37"></p><h2 id="2-2、-php中-的判断会将所有变量转换成数字在进行判断，而这里的md5加密后是-一串0e开头的字符串，所以只要再提交一个加密后0e开头的字符串就行，举例而言：s878926199a"><a href="#2-2、-php中-的判断会将所有变量转换成数字在进行判断，而这里的md5加密后是-一串0e开头的字符串，所以只要再提交一个加密后0e开头的字符串就行，举例而言：s878926199a" class="headerlink" title="2.2、   php中==的判断会将所有变量转换成数字在进行判断，而这里的md5加密后是 一串0e开头的字符串，所以只要再提交一个加密后0e开头的字符串就行，举例而言：s878926199a"></a>2.2、   php中==的判断会将所有变量转换成数字在进行判断，而这里的md5加密后是 一串0e开头的字符串，所以只要再提交一个加密后0e开头的字符串就行，举例而言：s878926199a</h2><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/38.png" alt="38"></p><h2 id="3、签到2"><a href="#3、签到2" class="headerlink" title="3、签到2"></a>3、签到2</h2><h3 id="3-1、打开"><a href="#3-1、打开" class="headerlink" title="3.1、打开"></a>3.1、打开</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/39.png" alt="39"></p><h3 id="3-2、发现输入位数受到限制，这里有两种方法，1：这里是前端进行的限制，可以直接删掉函数中对这里的限制，2：直接post改包提交口令，这里用了第一种方法"><a href="#3-2、发现输入位数受到限制，这里有两种方法，1：这里是前端进行的限制，可以直接删掉函数中对这里的限制，2：直接post改包提交口令，这里用了第一种方法" class="headerlink" title="3.2、发现输入位数受到限制，这里有两种方法，1：这里是前端进行的限制，可以直接删掉函数中对这里的限制，2：直接post改包提交口令，这里用了第一种方法"></a>3.2、发现输入位数受到限制，这里有两种方法，1：这里是前端进行的限制，可以直接删掉函数中对这里的限制，2：直接post改包提交口令，这里用了第一种方法</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/40.png" alt="40"></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/41.png" alt="41"></p><h2 id="4、这题真不是web"><a href="#4、这题真不是web" class="headerlink" title="4、这题真不是web"></a>4、这题真不是web</h2><h3 id="4-1、进入"><a href="#4-1、进入" class="headerlink" title="4.1、进入"></a>4.1、进入</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/4.png" alt="1"></p><h3 id="4-2、尝试了各种抓包，f12之后终于确认，这题居然真的不是web"><a href="#4-2、尝试了各种抓包，f12之后终于确认，这题居然真的不是web" class="headerlink" title="4.2、尝试了各种抓包，f12之后终于确认，这题居然真的不是web"></a>4.2、尝试了各种抓包，f12之后终于确认，这题居然真的不是web</h3><p>下载下来图片用ida打开得到了flag</p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/5.png" alt="1"></p><h2 id="5、层层递进"><a href="#5、层层递进" class="headerlink" title="5、层层递进"></a>5、层层递进</h2><h3 id="​-5-1、在源码看到奇怪的东西，指向so-html"><a href="#​-5-1、在源码看到奇怪的东西，指向so-html" class="headerlink" title="​    5.1、在源码看到奇怪的东西，指向so.html"></a>​    5.1、在源码看到奇怪的东西，指向so.html</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/42.png" alt="42"></p><h3 id="5-2、进入后又发现了一个新的指向"><a href="#5-2、进入后又发现了一个新的指向" class="headerlink" title="5.2、进入后又发现了一个新的指向"></a>5.2、进入后又发现了一个新的指向</h3><h3 id="-2"><a href="#-2" class="headerlink" title=""></a><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/43.png" alt="43"></h3><h3 id="​-5-3、进入后发现"><a href="#​-5-3、进入后发现" class="headerlink" title="​    5.3、进入后发现"></a>​    5.3、进入后发现</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/44.png" alt="44"></p><h3 id="​-5-4、打开源码发现了竖着的flag"><a href="#​-5-4、打开源码发现了竖着的flag" class="headerlink" title="​    5.4、打开源码发现了竖着的flag"></a>​    5.4、打开源码发现了竖着的flag</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFourthMD/45.png" alt="45"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;南邮ctf练习平台&quot;&gt;&lt;a href=&quot;#南邮ctf练习平台&quot; class=&quot;headerlink&quot; title=&quot;南邮ctf练习平台&quot;&gt;&lt;/a&gt;南邮ctf练习平台&lt;/h1&gt;&lt;h2 id=&quot;1、签到题&quot;&gt;&lt;a href=&quot;#1、签到题&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="南邮ctf练习平台" scheme="http://yoursite.com/tags/%E5%8D%97%E9%82%AEctf%E7%BB%83%E4%B9%A0%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu虚拟机上搭建php运行环境</title>
    <link href="http://yoursite.com/2018/10/17/%E5%9C%A8ubuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E6%90%AD%E5%BB%BAphp%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2018/10/17/在ubuntu虚拟机上搭建php运行环境/</id>
    <published>2018-10-17T06:15:22.000Z</published>
    <updated>2019-04-16T16:18:42.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1Apache2"><a href="#1Apache2" class="headerlink" title="1Apache2"></a>1Apache2</h2><h3 id="1-1安装Apache2"><a href="#1-1安装Apache2" class="headerlink" title="1.1安装Apache2"></a>1.1安装Apache2</h3><p>输入<code>sudo apt-get install apache2</code></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/1.png" alt="微信图片_20181012144505"></p><h3 id="1-2检测是否安装成功"><a href="#1-2检测是否安装成功" class="headerlink" title="1.2检测是否安装成功"></a>1.2检测是否安装成功</h3><p>在浏览器中输入<code>localhost</code></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/2.png" alt="微信图片_20181012144519"></p><h2 id="2php7-2"><a href="#2php7-2" class="headerlink" title="2php7.2"></a>2php7.2</h2><h3 id="2-1安装php7-2"><a href="#2-1安装php7-2" class="headerlink" title="2.1安装php7.2"></a>2.1安装php7.2</h3><p>输入<code>sudo apt install php7.2</code></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/3.png" alt="微信图片_20181012144609"></p><h3 id="2-2检测一下是否安装成功"><a href="#2-2检测一下是否安装成功" class="headerlink" title="2.2检测一下是否安装成功"></a>2.2检测一下是否安装成功</h3><p>输入<code>php7.2 - v</code></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/4.png" alt="微信图片_20181012144630"></p><h3 id="2-3最后整合一下php和apache"><a href="#2-3最后整合一下php和apache" class="headerlink" title="2.3最后整合一下php和apache"></a>2.3最后整合一下php和apache</h3><p>输入<code>sudo apt install libapache2-mod-php7.2</code></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/5.png" alt="微信图片_20181012144649"></p><h2 id="3MySQL"><a href="#3MySQL" class="headerlink" title="3MySQL"></a>3MySQL</h2><h3 id="3-1安装MySQL"><a href="#3-1安装MySQL" class="headerlink" title="3.1安装MySQL"></a>3.1安装MySQL</h3><p>输入<code>sudo apt install mysql-server mysql-client</code></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/6.png" alt="微信图片_20181012144722"></p><h3 id="3-2安装完成后出现两个问题"><a href="#3-2安装完成后出现两个问题" class="headerlink" title="3.2安装完成后出现两个问题"></a>3.2安装完成后出现两个问题</h3><h4 id="3-2-1安装时没有出现教程中的这个窗口"><a href="#3-2-1安装时没有出现教程中的这个窗口" class="headerlink" title="3.2.1安装时没有出现教程中的这个窗口"></a>3.2.1安装时没有出现教程中的这个窗口<img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/7.png" alt="20180711100548263"></h4><h4 id="3-2-2输入mysql-u-root-p出现报错："><a href="#3-2-2输入mysql-u-root-p出现报错：" class="headerlink" title="3.2.2输入mysql -u root -p出现报错："></a>3.2.2输入<code>mysql -u root -p</code>出现报错：</h4><p><code>Enter password：</code></p><p><code>ERROR 1698（28000）：Access denied for user &#39;root&#39;@&#39;localhost&#39;</code></p><h3 id="3-3网上找到解决方案：手动设置密码"><a href="#3-3网上找到解决方案：手动设置密码" class="headerlink" title="3.3网上找到解决方案：手动设置密码"></a>3.3网上找到解决方案：手动设置密码</h3><h4 id="3-3-1使用vim打开配置文件debian-cnf"><a href="#3-3-1使用vim打开配置文件debian-cnf" class="headerlink" title="3.3.1使用vim打开配置文件debian.cnf"></a>3.3.1使用vim打开配置文件<code>debian.cnf</code></h4><p>输入：<code>sudo vim /etc/mysql/debian.cnf</code></p><h4 id="3-3-2看到默认密码"><a href="#3-3-2看到默认密码" class="headerlink" title="3.3.2看到默认密码"></a>3.3.2看到默认密码</h4><h3 id=""><a href="#" class="headerlink" title=""></a><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/8.png" alt="20180711101655311"></h3><h4 id="3-3-3默认密码过于复杂于是开始修改密码"><a href="#3-3-3默认密码过于复杂于是开始修改密码" class="headerlink" title="3.3.3默认密码过于复杂于是开始修改密码"></a>3.3.3默认密码过于复杂于是开始修改密码</h4><h5 id="3-3-3-1先进入MySQL指令界面"><a href="#3-3-3-1先进入MySQL指令界面" class="headerlink" title="3.3.3.1先进入MySQL指令界面"></a>3.3.3.1先进入MySQL指令界面</h5><p>输入<code>mysql -u debian-sys-maint -p</code></p><p>在弹出的<code>ENTER password:</code>后输入默认的密码</p><p>从而进入</p><h5 id="3-3-3-2先选择MySQL库"><a href="#3-3-3-2先选择MySQL库" class="headerlink" title="3.3.3.2先选择MySQL库"></a>3.3.3.2先选择MySQL库</h5><p>输入<code>USE mysql</code></p><h5 id="3-3-3-3-重新设定密码"><a href="#3-3-3-3-重新设定密码" class="headerlink" title="3.3.3.3 重新设定密码"></a>3.3.3.3 重新设定密码</h5><h5 id="输入update-mysql-user-set-authentication-string-password-39-在这里输入新设定的密码-39-where-user-39-root-39-and-Host-39-localhost-39"><a href="#输入update-mysql-user-set-authentication-string-password-39-在这里输入新设定的密码-39-where-user-39-root-39-and-Host-39-localhost-39" class="headerlink" title="输入update mysql.user set authentication_string=password(&#39;在这里输入新设定的密码&#39;) where user=&#39;root&#39;and Host = &#39;localhost&#39;;"></a>输入<code>update mysql.user set authentication_string=password(&#39;在这里输入新设定的密码&#39;) where user=&#39;root&#39;and Host = &#39;localhost&#39;;</code></h5><h5 id="3-3-3-4-重启后实验"><a href="#3-3-3-4-重启后实验" class="headerlink" title="3.3.3.4 重启后实验"></a>3.3.3.4 重启后实验</h5><p>先输入<code>sudo service mysql restart</code></p><p>在输入<code>sudo mysql -u -p</code></p><p>输入自己设定的密码后果然成功进入了mysql命令模式</p><h3 id="3-4整合一下php、MySQL、Apache"><a href="#3-4整合一下php、MySQL、Apache" class="headerlink" title="3.4整合一下php、MySQL、Apache"></a>3.4整合一下php、MySQL、Apache</h3><p>输入<code>sudo apt-get install php7.2-mysql</code></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/9.png" alt="微信图片_20181012144740"></p><h3 id="3-5重启一下MySQL和Apache"><a href="#3-5重启一下MySQL和Apache" class="headerlink" title="3.5重启一下MySQL和Apache"></a>3.5重启一下MySQL和Apache</h3><p>输入<code>sudo service mysql restart</code></p><p>再输入<code>sudo service apache2 restart</code></p><h2 id="4装好了环境先检验一下"><a href="#4装好了环境先检验一下" class="headerlink" title="4装好了环境先检验一下"></a>4装好了环境先检验一下</h2><h3 id="4-1先用touch命令在-var-www-html目录下创建一个新的php文件"><a href="#4-1先用touch命令在-var-www-html目录下创建一个新的php文件" class="headerlink" title="4.1先用touch命令在/var/www/html目录下创建一个新的php文件"></a>4.1先用touch命令在/var/www/html目录下创建一个新的php文件</h3><p>输入<code>sudo /var/www/html</code></p><p>然后<code>sudo touch info.php</code></p><h3 id="4-2下载一个vim工具用于编辑文件"><a href="#4-2下载一个vim工具用于编辑文件" class="headerlink" title="4.2下载一个vim工具用于编辑文件"></a>4.2下载一个vim工具用于编辑文件</h3><p><code>sudo apt install vim</code></p><h3 id="4-3编辑info-php"><a href="#4-3编辑info-php" class="headerlink" title="4.3编辑info.php"></a>4.3编辑info.php</h3><p>&lt;? php</p><p>   phpinfo()</p><p>?&gt;</p><h3 id="4-4打开192-168-1-111-info-php"><a href="#4-4打开192-168-1-111-info-php" class="headerlink" title="4.4打开192.168.1.111/info.php"></a>4.4打开192.168.1.111/info.php</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForSecoundMD/10.png" alt="10"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1Apache2&quot;&gt;&lt;a href=&quot;#1Apache2&quot; class=&quot;headerlink&quot; title=&quot;1Apache2&quot;&gt;&lt;/a&gt;1Apache2&lt;/h2&gt;&lt;h3 id=&quot;1-1安装Apache2&quot;&gt;&lt;a href=&quot;#1-1安装Apache2&quot; cla
      
    
    </summary>
    
    
      <category term="环境" scheme="http://yoursite.com/tags/%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>搭建vps</title>
    <link href="http://yoursite.com/2018/09/25/%E6%90%AD%E5%BB%BAvps/"/>
    <id>http://yoursite.com/2018/09/25/搭建vps/</id>
    <published>2018-09-25T13:14:34.000Z</published>
    <updated>2019-04-16T16:19:14.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vps搭建"><a href="#vps搭建" class="headerlink" title="vps搭建"></a>vps搭建</h1><h2 id="1、租用一个国外的vps服务器（我选择了vultr）"><a href="#1、租用一个国外的vps服务器（我选择了vultr）" class="headerlink" title="1、租用一个国外的vps服务器（我选择了vultr）"></a>1、租用一个国外的vps服务器（我选择了vultr）</h2><h3 id="1-2、选择服务器位置（我选了最近的东京）"><a href="#1-2、选择服务器位置（我选了最近的东京）" class="headerlink" title="1.2、选择服务器位置（我选了最近的东京）"></a>1.2、选择服务器位置（我选了最近的东京）</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/30.png" alt="微信图片_20180924130119"></p><h3 id="1-2-系统根据网上信息选择了插件兼容度最高的centos"><a href="#1-2-系统根据网上信息选择了插件兼容度最高的centos" class="headerlink" title="1.2 系统根据网上信息选择了插件兼容度最高的centos"></a>1.2 系统根据网上信息选择了插件兼容度最高的centos</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/31.png" alt="微信图片_20180924130122"></p><h3 id="1-3-给主机命名"><a href="#1-3-给主机命名" class="headerlink" title="1.3 给主机命名"></a>1.3 给主机命名</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/32.png" alt="微信图片_20180924130124"></p><h3 id="1-4-完成"><a href="#1-4-完成" class="headerlink" title="1.4 完成"></a>1.4 完成</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/33.png" alt="微信图片_20180924130127"></p><h2 id="2、下载安装xshell，并新建配置"><a href="#2、下载安装xshell，并新建配置" class="headerlink" title="2、下载安装xshell，并新建配置"></a>2、下载安装xshell，并新建配置</h2><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/34.png" alt="微信图片_20180924130339"></p><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/35.png" alt="微信图片_20180924130341"></p><p>输入<code>wget--no-check-certificate -O shadowsocks-libev_CN.shhttps://raw.githubusercontent.com/uxh/shadowsocks_bash/master/shadowsocks-libev_CN.sh&amp;&amp; bash shadowsocks-libev_CN.sh</code></p><p>输入<code>1</code>进行安装</p><p>依次设定ss密码和ss端口以及ss加密</p><p>进行配置</p><h2 id="3、配置成功"><a href="#3、配置成功" class="headerlink" title="3、配置成功"></a>3、配置成功</h2><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/36.png" alt="微信图片_20180924130103"></p><h2 id="4、使用ss进行试验，输入ip，端口，密码"><a href="#4、使用ss进行试验，输入ip，端口，密码" class="headerlink" title="4、使用ss进行试验，输入ip，端口，密码"></a>4、使用ss进行试验，输入ip，端口，密码</h2><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/37.png" alt="微信图片_20180924131934"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vps搭建&quot;&gt;&lt;a href=&quot;#vps搭建&quot; class=&quot;headerlink&quot; title=&quot;vps搭建&quot;&gt;&lt;/a&gt;vps搭建&lt;/h1&gt;&lt;h2 id=&quot;1、租用一个国外的vps服务器（我选择了vultr）&quot;&gt;&lt;a href=&quot;#1、租用一个国外的vps服务器
      
    
    </summary>
    
    
      <category term="服务器" scheme="http://yoursite.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>搭建个人博客</title>
    <link href="http://yoursite.com/2018/09/25/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2018/09/25/搭建个人博客/</id>
    <published>2018-09-25T13:14:34.000Z</published>
    <updated>2019-04-16T16:19:57.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建一个个人博客"><a href="#搭建一个个人博客" class="headerlink" title="搭建一个个人博客"></a>搭建一个个人博客</h1><h2 id="1-先在电脑上找到分配一个文件夹准备给blog"><a href="#1-先在电脑上找到分配一个文件夹准备给blog" class="headerlink" title="1 先在电脑上找到分配一个文件夹准备给blog"></a>1 先在电脑上找到分配一个文件夹准备给blog</h2><h2 id="2-注册github账号，但是可惜卡在了step1"><a href="#2-注册github账号，但是可惜卡在了step1" class="headerlink" title="2 注册github账号，但是可惜卡在了step1"></a>2 注册github账号，但是可惜卡在了step1</h2><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/15.png" alt="1537621346512"></p><h3 id="3用vpn登上"><a href="#3用vpn登上" class="headerlink" title="3用vpn登上"></a>3用vpn登上</h3><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/16.png" alt="屏幕截图(3)"></p><h2 id="4成功注册"><a href="#4成功注册" class="headerlink" title="4成功注册"></a>4成功注册<img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/17.png" alt="微信图片_20180923083830"></h2><h2 id="5-新建一个工程"><a href="#5-新建一个工程" class="headerlink" title="5 新建一个工程"></a>5 新建一个工程</h2><p><img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/18.png" alt="微信图片_20180923213411"></p><h2 id="6-下载并安装git"><a href="#6-下载并安装git" class="headerlink" title="6 下载并安装git"></a>6 下载并安装git</h2><p><a href="https://github.com/git-for-windows/git/releases/download/v2.19.0.windows.1/Git-2.19.0-64-bit.exe" target="_blank" rel="noopener">git下载地址</a></p><h2 id="7-下载并安装nodejs"><a href="#7-下载并安装nodejs" class="headerlink" title="7 下载并安装nodejs"></a>7 下载并安装nodejs</h2><p><a href="https://nodejs.org/dist/v8.12.0/node-v8.12.0-x64.msi" target="_blank" rel="noopener">nodejs下载地址</a></p><h2 id="8-安装hexo"><a href="#8-安装hexo" class="headerlink" title="8 安装hexo"></a>8 安装hexo</h2><h3 id="8-1先创建一个blog文件夹"><a href="#8-1先创建一个blog文件夹" class="headerlink" title="8.1先创建一个blog文件夹"></a>8.1先创建一个blog文件夹<img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/19.png" alt="微信图片_20180923213937"></h3><h3 id="8-2使用cmd进行安装"><a href="#8-2使用cmd进行安装" class="headerlink" title="8.2使用cmd进行安装"></a>8.2使用cmd进行安装</h3><h3 id="8-3全局配置到淘宝源npm-config-set-registry-https-registry-npm-taobao-org（这个源比较稳定，也可以使用默认的）"><a href="#8-3全局配置到淘宝源npm-config-set-registry-https-registry-npm-taobao-org（这个源比较稳定，也可以使用默认的）" class="headerlink" title="8.3全局配置到淘宝源npm config set registry https://registry.npm.taobao.org（这个源比较稳定，也可以使用默认的）"></a>8.3全局配置到淘宝源<code>npm config set registry https://registry.npm.taobao.org</code>（这个源比较稳定，也可以使用默认的）</h3><h2 id="8-4设置全局配置user-name和user-email"><a href="#8-4设置全局配置user-name和user-email" class="headerlink" title="8.4设置全局配置user.name和user.email"></a>8.4设置全局配置user.name和user.email</h2><p><code>git config –-global user.name “id”</code><br> <code>git config –-global user.email “youremail@qq.com”</code></p><h3 id="8-5生成SSH密钥设置到Github-需先设置user-name和user-email"><a href="#8-5生成SSH密钥设置到Github-需先设置user-name和user-email" class="headerlink" title="8.5生成SSH密钥设置到Github(需先设置user.name和user.email)"></a>8.5生成SSH密钥设置到Github(需先设置user.name和user.email)</h3><p><code>cd ~/.ssh</code><br><code>ssh-keygen -t rsa -C “youremail@qq.com”</code></p><h3 id="8-6获取ssh密钥"><a href="#8-6获取ssh密钥" class="headerlink" title="8.6获取ssh密钥"></a>8.6获取ssh密钥</h3><p><code>cat id_rsa.pub</code></p><h3 id="8-7输入github中"><a href="#8-7输入github中" class="headerlink" title="8.7输入github中"></a>8.7输入github中<img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/20.png" alt="微信图片_20180923235427"></h3><h3 id="8-8检查一下是否成功"><a href="#8-8检查一下是否成功" class="headerlink" title="8.8检查一下是否成功"></a>8.8检查一下是否成功</h3><p><code>ssh -T git@github.com</code></p><h3 id="8-9正式开始安装Hexo"><a href="#8-9正式开始安装Hexo" class="headerlink" title="8.9正式开始安装Hexo"></a>8.9正式开始安装Hexo</h3><p>  <code>cd /</code><br>  <code>pwd /</code><br><code>npm install hexo-cli -g</code>  </p><p> <code>cd /</code><br><code>hexo init Hexo</code><br><code>cd /Hexo</code><br><code>npm install</code><br><code>hexo generate</code><br><code>hexo sever</code></p><h3 id="8-10安装部署到github插件依赖"><a href="#8-10安装部署到github插件依赖" class="headerlink" title="8.10安装部署到github插件依赖"></a>8.10安装部署到github插件依赖</h3><p><code>npm install –save hexo-deployer-git</code></p><h3 id="8-11更改-config-yml文件的末尾（注意：冒号后面有一个空格，deploy下面每一行都有一个括号）"><a href="#8-11更改-config-yml文件的末尾（注意：冒号后面有一个空格，deploy下面每一行都有一个括号）" class="headerlink" title="8.11更改_config.yml文件的末尾（注意：冒号后面有一个空格，deploy下面每一行都有一个括号）"></a>8.11更改_config.yml文件的末尾（注意：冒号后面有一个空格，deploy下面每一行都有一个括号）</h3><p>deploy:<br>  type: git<br>  repo: <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:id/id.github.io.git  //（改成自己的用户名和用户名加域名）<br>  branch: master</p><h3 id="8-12将gitbash部署hexo到github"><a href="#8-12将gitbash部署hexo到github" class="headerlink" title="8.12将gitbash部署hexo到github"></a>8.12将gitbash部署hexo到github</h3><p><code>hexo deploy</code></p><h2 id="9完成"><a href="#9完成" class="headerlink" title="9完成"></a>9完成<img src="https://github.com/d1lute/d1lute.repository/raw/master/pictureForFirstMD/21.png" alt="微信图片_20180924001007"></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;搭建一个个人博客&quot;&gt;&lt;a href=&quot;#搭建一个个人博客&quot; class=&quot;headerlink&quot; title=&quot;搭建一个个人博客&quot;&gt;&lt;/a&gt;搭建一个个人博客&lt;/h1&gt;&lt;h2 id=&quot;1-先在电脑上找到分配一个文件夹准备给blog&quot;&gt;&lt;a href=&quot;#1-先在电脑
      
    
    </summary>
    
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
